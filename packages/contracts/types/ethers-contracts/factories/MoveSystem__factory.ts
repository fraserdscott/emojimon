/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MoveSystem, MoveSystemInterface } from "../MoveSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "z",
            type: "int32",
          },
        ],
        internalType: "struct VoxelCoord",
        name: "coord",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d0f380380610d0f83398101604081905261002f9161010b565b600280546001600160a01b0319163317905581816001600160a01b0381161561005857806100ba565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610096573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ba9190610145565b600080546001600160a01b039283166001600160a01b031991821617909155600180549490921693169290921790915550610169915050565b6001600160a01b038116811461010857600080fd5b50565b6000806040838503121561011e57600080fd5b8251610129816100f3565b602084015190925061013a816100f3565b809150509250929050565b60006020828403121561015757600080fd5b8151610162816100f3565b9392505050565b610b97806101786000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780635c667cc31461007a5780638da5cb5b1461008d578063f2fde38b146100b5575b600080fd5b61006461005f3660046107ad565b6100ca565b6040516100719190610860565b60405180910390f35b6100646100883660046108de565b6100e9565b60025460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100c86100c3366004610932565b610417565b005b60606100e382806020019051810190610088919061096f565b92915050565b6000805460609133916101329073ffffffffffffffffffffffffffffffffffffffff167f49a4584d9706380e35459e1f31e673445371b5bac20aa516f8ba8650b1843106610526565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156101a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c491906109b7565b156102d8576040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481018390526102629073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401606060405180830381865afa158015610238573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025c919061096f565b85610672565b60030b6001146102d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f63616e206f6e6c79206d6f766520746f2061646a6163656e742073706163657360448201526064015b60405180910390fd5b61036b565b60408051606081018252600080825260208201819052918101919091526102ff9085610672565b60030b60011461036b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f63616e206f6e6c79206d6f766520746f2061646a6163656e742073706163657360448201526064016102ca565b604080517fdd4d16d5000000000000000000000000000000000000000000000000000000008152600481018490528551600390810b60248301526020870151810b60448301529186015190910b606482015273ffffffffffffffffffffffffffffffffffffffff82169063dd4d16d590608401600060405180830381600087803b1580156103f857600080fd5b505af115801561040c573d6000803e3d6000fd5b505050505050919050565b60025473ffffffffffffffffffffffffffffffffffffffff163314610498576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4f4e4c595f4f574e45520000000000000000000000000000000000000000000060448201526064016102ca565b60025460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610596573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526105dc91908101906109d9565b90508051600003610649576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016102ca565b61066a8160008151811061065f5761065f610a7f565b602002602001015190565b949350505050565b600080826000015160030b846000015160030b1361069d57835183516106989190610add565b6106ab565b825184516106ab9190610add565b90506000836040015160030b856040015160030b136106dd57846040015184604001516106d89190610add565b6106f1565b836040015185604001516106f19190610add565b90506106fd8183610b1f565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561075857610758610706565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156107a5576107a5610706565b604052919050565b600060208083850312156107c057600080fd5b823567ffffffffffffffff808211156107d857600080fd5b818501915085601f8301126107ec57600080fd5b8135818111156107fe576107fe610706565b61082e847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161075e565b9150808252868482850101111561084457600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b8181101561088d57858101830151858201604001528201610871565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b8060030b81146108db57600080fd5b50565b6000606082840312156108f057600080fd5b6108f8610735565b8235610903816108cc565b81526020830135610913816108cc565b60208201526040830135610926816108cc565b60408201529392505050565b60006020828403121561094457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461096857600080fd5b9392505050565b60006060828403121561098157600080fd5b610989610735565b8251610994816108cc565b815260208301516109a4816108cc565b60208201526040830151610926816108cc565b6000602082840312156109c957600080fd5b8151801515811461096857600080fd5b600060208083850312156109ec57600080fd5b825167ffffffffffffffff80821115610a0457600080fd5b818501915085601f830112610a1857600080fd5b815181811115610a2a57610a2a610706565b8060051b9150610a3b84830161075e565b8181529183018401918481019088841115610a5557600080fd5b938501935b83851015610a7357845182529385019390850190610a5a565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600382810b9082900b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000008112637fffffff821317156100e3576100e3610aae565b600381810b9083900b01637fffffff81137fffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000000821217156100e3576100e3610aae56fea264697066735822122005a32ea5929962599ec19194dbb9888879786ae6aff455fd1e4aced9f5da14de64736f6c63430008110033";

type MoveSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MoveSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MoveSystem__factory extends ContractFactory {
  constructor(...args: MoveSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MoveSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<MoveSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): MoveSystem {
    return super.attach(address) as MoveSystem;
  }
  override connect(signer: Signer): MoveSystem__factory {
    return super.connect(signer) as MoveSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MoveSystemInterface {
    return new utils.Interface(_abi) as MoveSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MoveSystem {
    return new Contract(address, _abi, signerOrProvider) as MoveSystem;
  }
}
