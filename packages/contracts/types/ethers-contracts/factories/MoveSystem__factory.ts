/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MoveSystem, MoveSystemInterface } from "../MoveSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "z",
            type: "int32",
          },
        ],
        internalType: "struct VoxelCoord",
        name: "coord",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d61380380610d6183398101604081905261002f9161010b565b600280546001600160a01b0319163317905581816001600160a01b0381161561005857806100ba565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610096573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ba9190610145565b600080546001600160a01b039283166001600160a01b031991821617909155600180549490921693169290921790915550610169915050565b6001600160a01b038116811461010857600080fd5b50565b6000806040838503121561011e57600080fd5b8251610129816100f3565b602084015190925061013a816100f3565b809150509250929050565b60006020828403121561015757600080fd5b8151610162816100f3565b9392505050565b610be9806101786000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780635c667cc31461007a5780638da5cb5b1461008d578063f2fde38b146100b5575b600080fd5b61006461005f3660046107ff565b6100ca565b60405161007191906108b2565b60405180910390f35b610064610088366004610930565b6100e9565b60025460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100c86100c3366004610984565b610417565b005b60606100e38280602001905181019061008891906109c1565b92915050565b6000805460609133916101329073ffffffffffffffffffffffffffffffffffffffff167f49a4584d9706380e35459e1f31e673445371b5bac20aa516f8ba8650b1843106610526565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156101a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c49190610a09565b156102d8576040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481018390526102629073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401606060405180830381865afa158015610238573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025c91906109c1565b85610672565b60030b6001146102d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f63616e206f6e6c79206d6f766520746f2061646a6163656e742073706163657360448201526064015b60405180910390fd5b61036b565b60408051606081018252600080825260208201819052918101919091526102ff9085610672565b60030b60011461036b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f63616e206f6e6c79206d6f766520746f2061646a6163656e742073706163657360448201526064016102ca565b604080517fdd4d16d5000000000000000000000000000000000000000000000000000000008152600481018490528551600390810b60248301526020870151810b60448301529186015190910b606482015273ffffffffffffffffffffffffffffffffffffffff82169063dd4d16d590608401600060405180830381600087803b1580156103f857600080fd5b505af115801561040c573d6000803e3d6000fd5b505050505050919050565b60025473ffffffffffffffffffffffffffffffffffffffff163314610498576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4f4e4c595f4f574e45520000000000000000000000000000000000000000000060448201526064016102ca565b60025460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610596573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526105dc9190810190610a2b565b90508051600003610649576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016102ca565b61066a8160008151811061065f5761065f610ad1565b602002602001015190565b949350505050565b600080826000015160030b846000015160030b1361069d57835183516106989190610b2f565b6106ab565b825184516106ab9190610b2f565b90506000836020015160030b856020015160030b136106dd57846020015184602001516106d89190610b2f565b6106f1565b836020015185602001516106f19190610b2f565b90506000846040015160030b866040015160030b13610723578560400151856040015161071e9190610b2f565b610737565b846040015186604001516107379190610b2f565b9050806107448385610b71565b61074e9190610b71565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156107aa576107aa610758565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156107f7576107f7610758565b604052919050565b6000602080838503121561081257600080fd5b823567ffffffffffffffff8082111561082a57600080fd5b818501915085601f83011261083e57600080fd5b81358181111561085057610850610758565b610880847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016107b0565b9150808252868482850101111561089657600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b818110156108df578581018301518582016040015282016108c3565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b8060030b811461092d57600080fd5b50565b60006060828403121561094257600080fd5b61094a610787565b82356109558161091e565b815260208301356109658161091e565b602082015260408301356109788161091e565b60408201529392505050565b60006020828403121561099657600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146109ba57600080fd5b9392505050565b6000606082840312156109d357600080fd5b6109db610787565b82516109e68161091e565b815260208301516109f68161091e565b602082015260408301516109788161091e565b600060208284031215610a1b57600080fd5b815180151581146109ba57600080fd5b60006020808385031215610a3e57600080fd5b825167ffffffffffffffff80821115610a5657600080fd5b818501915085601f830112610a6a57600080fd5b815181811115610a7c57610a7c610758565b8060051b9150610a8d8483016107b0565b8181529183018401918481019088841115610aa757600080fd5b938501935b83851015610ac557845182529385019390850190610aac565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600382810b9082900b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000008112637fffffff821317156100e3576100e3610b00565b600381810b9083900b01637fffffff81137fffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000000821217156100e3576100e3610b0056fea2646970667358221220aa523fdba1e73c092d5a63951fae0feeac244d1de943fd68f33cf9d7e8cd73f364736f6c63430008110033";

type MoveSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MoveSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MoveSystem__factory extends ContractFactory {
  constructor(...args: MoveSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MoveSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<MoveSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): MoveSystem {
    return super.attach(address) as MoveSystem;
  }
  override connect(signer: Signer): MoveSystem__factory {
    return super.connect(signer) as MoveSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MoveSystemInterface {
    return new utils.Interface(_abi) as MoveSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MoveSystem {
    return new Contract(address, _abi, signerOrProvider) as MoveSystem;
  }
}
